<style lang="less" src="./less/index.less"></style>
<style src='public/style/weui.wxss'></style>
<style lang="less">
.toptips {
  line-height: 1;
  min-height: 0.5rem;
}
.padding{
  border-bottom: 1px solid #ccc;
  margin-bottom: 10px;
}

.button{
  width: 60%;
  margin-top: 60rpx;
  background-color: #b39ddb;
  color:whitesmoke;
  border-radius: 98rpx;
  display: flex;
  flex-direction: row;
  align-items: center;
  justify-content: center;
}
</style>

<script>
import wepy from 'wepy'
import 'wepy-async-function'

import { setStore } from 'wepy-redux'
import configStore from './store'

const store = configStore()
setStore(store)

export default class extends wepy.app {
  config = {
    // 最后需要对这些页面的顺序进行调整
    pages: [
      'pages/course/index',
      'pages/course/join',
      'pages/my/authorize',
      'pages/course/homework/detail',
      'pages/teacher/classCreate',
      'pages/teacher/signinCreat',
      'pages/course/courseDetail',
      'pages/course/courseList',
      'pages/course/signin/detail',
      'pages/course/exercise/index',
      'pages/course/chat/index',
      'pages/course/test/index',
      'pages/my/register',
      'pages/my/gradeInfo',
      'pages/my/my',
      'pages/teacher/teacher',
      'pages/teacher/signinChoose',
      'pages/course/signin/signinList',
      'pages/course/homework/list',
      'pages/my/myInfo',
      'pages/my/myClass',
      'pages/my/useHelp',
      'pages/my/connectUs',
      'pages/my/queReport',
      'pages/teacher/stuBan',
      'pages/teacher/testCreat',
      'pages/teacher/homeworkCreat',
      'pages/teacher/testControl',
      'pages/teacher/signinControl',
      'pages/teacher/homeworkControl',
      'pages/teacher/classControl',
      'pages/teacher/homeworkSearch',
      'pages/teacher/testSearch',
      'pages/teacher/homeworkChoose',
      'pages/teacher/homeworkSearchDetail'
    ],
    'permission': {
      'scope.userLocation': {
        'desc': '你的位置信息将用于小程序位置接口的效果展示'
      }
    },
    window: {
      backgroundTextStyle: 'light',
      navigationBarBackgroundColor: '#b39ddb',
      backgroundColor: '#eee',
      navigationBarTitleText: 'WeChat',
      navigationBarTextStyle: 'black',
      enablePullDownRefresh: true
    },
    tabBar: {
      list: [
        {
          pagePath: 'pages/course/index',
          selectedIconPath: 'public/images/icon_帮助文档 (1).png',
          iconPath: 'public/images/icon_帮助文档.png',
          text: '课程'
        },
        {
          pagePath: 'pages/teacher/teacher',
          selectedIconPath: 'public/images/老师 (1).png',
          iconPath: 'public/images/老师.png',
          text: '教师'
        },
        {
          pagePath: 'pages/my/my',
          selectedIconPath: 'public/images/icon_账号 (1).png',
          iconPath: 'public/images/icon_账号.png',
          text: '我的'
        }
      ]
    }
  }

  globalData = {
    userInfo: {},
    loginCode: '', // 判断用户信息是否已完善
    apiUrl: 'https://testet.sinaapp.com/index.php/Gateway/route',
    grant_type: 'authorization_code', // 获取openid的参数，不用改
    activeCourse: '1', // 主页面的课程id
    logo: ''
  }
  constructor() {
    super()
    this.use('requestfix')
  }

  onLaunch() {
    // 查看是否授权
    wx.getSetting({
      success(res) {
        if (!res.authSetting['scope.userInfo']) {
          wx.navigateTo({
            url: '/pages/my/authorize'
          })
        }
      }
    })
  }

  request(tag, data, loading) {
    var promise = new Promise((resolve, reject) => {
      var that = this
      if (loading) wx.showLoading({ title: loading, mask: true }) // 无参数则不显示
      data = data || {}  // data 默认为空对象
      loading = loading || 'Requesting'  // 在调试器打印请求发送记录
      if (that.globalData.showLog) console.log(tag + ': ' + loading + '...')
      data.pf = 'wx'
      data.method = tag   // 默认添加 pf 和 tag 参数
      wx.request({
        url: that.globalData.apiUrl,
        method: 'POST',
        header: {
          'content-type': 'application/json',
          'cookie': that.globalData.cookie || ''
        },
        data: data,
        success: function (res) {
          res.tag = tag + ': '   // 返还 tag 名字, 方便用 console 定位
          wx.hideLoading()
          if (res.statusCode === 200) {
            if (res.data.msg === 4002) {
              reject(new Error('请先登录'))
            }
            resolve(res)
          } else {
            reject(new Error('request statusCode:' + res.statusCode))
          }
        },
        fail: function (e) {
          wx.showToast({ icon: 'none', title: '网络连接失败' })
          // reject('网络连接失败')   // request fail 那么网断了
        }
      })
    })
    return promise
  }

  modal(content, title, confirmText, showCancel, Color) {
    var promise = new Promise((resolve, reject) => {
      wx.showModal({
        title: title || '提示',
        content: content,
        showCancel: showCancel || false,
        cancelText: '取消',
        cancelColor: '',
        confirmText: confirmText || '好的',
        confirmColor: Color,
        success: function (res) {
          if (res.confirm) resolve(res)
          else reject(res)
        },
        fail: function (res) {
          reject(res)
        }
      })
    })
    return promise
  }

  toast(content, title, mask) {
    var promise = new Promise((resolve, reject) => {
      wx.showToast({
        title: content,
        icon: title || 'none',
        image: '',
        duration: 1800,
        mask: mask || false,
        success: function (res) { resolve(res) },
        fail: function (res) { reject(res) }
      })
    })
    setTimeout(() => {
      return promise
    }, 1800)
  }
}
</script>
