<style lang="less" src="./less/index.less"></style>
<style src='public/style/weui.wxss'></style>

<script>
import wepy from 'wepy'
import 'wepy-async-function'

import { setStore } from 'wepy-redux'
import configStore from './store'

const store = configStore()
setStore(store)

export default class extends wepy.app {
  config = {
    // 最后需要对这些页面的顺序进行调整
    pages: [
      'pages/course/index',
      'pages/my/authorize',
      'pages/my/register',
      'pages/my/gradeInfo',
      'pages/my/my',
      'pages/teacher/teacher',
      'pages/teacher/signinChoose',
      'pages/teacher/signinCreat',
      'pages/course/signin/list',
      'pages/course/signin/detail',
      'pages/course/homework/list',
      'pages/course/homework/detail',
      'pages/my/myInfo',
      'pages/my/myClass',
      'pages/my/useHelp',
      'pages/my/connectUs',
      'pages/my/queReport',
      'pages/teacher/classCreat',
      'pages/teacher/stuBan',
      'pages/teacher/testCreat',
      'pages/teacher/homeworkCreat',
      'pages/teacher/testControl',
      'pages/teacher/signinControl',
      'pages/teacher/homeworkControl',
      'pages/teacher/classControl',
      'pages/teacher/homeworkSearch',
      'pages/teacher/testSearch'
    ],
    window: {
      backgroundTextStyle: 'light',
      navigationBarBackgroundColor: '#fff',
      navigationBarTitleText: 'WeChat',
      navigationBarTextStyle: 'black'
    },
    tabBar: {
      list: [
        {
          pagePath: 'pages/course/index',
          selectedIconPath: 'public/images/empty.png',
          iconPath: 'public/images/empty.png',
          text: '课程'
        },
        {
          pagePath: 'pages/teacher/teacher',
          selectedIconPath: 'public/images/empty.png',
          iconPath: 'public/images/empty.png',
          text: '教师'
        },
        {
          pagePath: 'pages/my/my',
          selectedIconPath: 'public/images/empty.png',
          iconPath: 'public/images/empty.png',
          text: '我的'
        }
      ]
    }
  }

  globalData = {
    userInfo: {},
    loginCode: '', // 判断用户信息是否已完善
    apiUrl: 'http://47.101.164.57:8080/physicalFlower/gateway.do'
  }

  constructor() {
    super()
    this.use('requestfix')
  }

  onLaunch() {
    let that = this
    // 查看是否授权
    wx.getSetting({
      success(res) {
        if (res.authSetting['scope.userInfo']) {
          // 已经授权，可以直接调用 getUserInfo 获取头像昵称
          wx.getUserInfo({
            success(res) {
              that.globalData.userInfo = res.userInfo
            }
          })
        } else {
          wx.navigateTo({
            url: '/pages/my/authorize'
          })
        }
      }
    })

    this.getOpenid()
    .then(function(data) {
      console.log(data)
      // return checkInformation()
    })
    // .then(function(data){
    //     console.log(data)
    //     return runAsync3()
    // })
    // .then(function(data){
    //     console.log(data)
    // })
  }

  // 登录
  getOpenid (s) {
    let that = this
    return new Promise((resolve, reject) => {
      wx.login({
        success: function (res) {
          var UL_DATA = {
            code: res.code,
            appId: 'wx9061828744e52511',
            appSecret: 'f8edd6c9131964c83646a2056eba3700',
            grant_type: 'authorization_code'
          }
          that.request('userLogin', UL_DATA, '登录中')
          .then((res) => {
            that.globalData.userInfo.openid = res.data.wx_msg.openid
            that.globalData.userInfo.loginCode = res.data.wx_msg.code
            that.globalData.cookies = res.data.cookies
          })
        },
        fail: function (res) {
          that.modal(
            '请检查网络状况或账号安全状况。\n您现在处于未登录状态。',
            '登录账户失败',
            '确定'
          )
          .then((res) => { console.log('wx.login失败') })
        }
      })
    })
  }

  request(tag, data, loading) {
    var promise = new Promise((resolve, reject) => {
      var that = this
      if (loading) wx.showLoading({ title: loading, mask: true }) // 无参数则不显示
      data = data || {}  // data 默认为空对象
      loading = loading || 'Requesting'  // 在调试器打印请求发送记录
      if (that.globalData.showLog) console.log(tag + ': ' + loading + '...')
      data.pf = 'wx'
      data.tag = tag   // 默认添加 pf 和 tag 参数
      wx.request({
        url: that.globalData.apiUrl,
        method: 'POST',
        header: {
          'content-type': 'application/json',
          'cookies': that.globalData.cookies
        },
        data: data,
        success: function (res) {
          res.tag = tag + ': '   // 返还 tag 名字, 方便用 console 定位
          wx.hideLoading()
          if (res.statusCode === 200) resolve(res)
          else reject(res)
        },
        fail: function (e) {
          wx.showToast({ icon: 'none', title: '网络连接失败' })
          // reject('网络连接失败')   // request fail 那么网断了
        }
      })
    })
    return promise
  }

  modal(content, title, confirmText, showCancel) {
    var promise = new Promise((resolve, reject) => {
      wx.showModal({
        title: title || '提示',
        content: content,
        showCancel: showCancel || false,
        cancelText: '',
        cancelColor: '',
        confirmText: confirmText || '好的',
        confirmColor: '',
        success: function (res) {
          if (res.confirm) resolve(res)
          else reject(res)
        },
        fail: function (res) {
          reject(res)
        }
      })
    })
    return promise
  }

  toast(content, title, mask) {
    var promise = new Promise((resolve, reject) => {
      wx.showToast({
        title: content,
        icon: title || 'none',
        image: '',
        duration: 2000,
        mask: mask || false,
        success: function (res) { resolve(res) },
        fail: function (res) { reject(res) }
      })
    })
    return promise
  }
}
</script>
