// 按钮的小图标，界面颜色的调整
<style type="less">
.btn1 {
  width: 75%;
  margin-top: 20rpx;
  /* background: linear-gradient(150deg, #d188fb, #9587f8, #558bf7);  */
  color: black;
  border-radius: 98rpx;
  display: flex;
  flex-direction: row;
  align-items: center;
  justify-content: center;
  background-color: #F8F8f0;
  font-size:32rpx;
}

.btnImg {
  margin-right: 8rpx;
  width: 46rpx;
  height: 46rpx;
}

.btn1::after {
  border-radius: 98rpx;
  border: 0;
}
.folder-container .folder-header {
height:50px
}
.font-14 {
font-size:20px;
}
.weui-btn{
  margin-top: 90rpx;
}
button {
position:relative;
display:block;
margin-left:auto;
margin-right:auto;
padding-left:15px;
padding-right:14px;
box-sizing:border-box;
font-size:18px;
text-align:center;
text-decoration:none;
line-height:2.55555556;
border-radius:100px;
-webkit-tap-highlight-color:transparent;
overflow:hidden;
color:#000000;
background-color:#F8F8F8;

}

</style>
<template>
<view class="kai-content">
    <view class="padding-10">
      <view class="head" style="font-size:35rpx;font-weight:bold">课程id：{{idCourse}}</view>
      <view class="head" style="font-size:35rpx;font-weight:bold">课程名称：{{courseName}}</view>
       <view class="head" style="font-size:30rpx;font-weight:bold">加入人数：{{count}}</view>



      <folder1 title="签到" componentId="0" fontClass="font-size:32rpx;font-weight:bold">
        <view slot="content" class="beauty">
           <button class='btn1'  id="1" @tap='tap'>
            
            <view>创建签到</view>
        </button>

        <button class='btn1'  id="2" @tap='tap'>
            
            <view>管理签到</view>
        </button>
           <!-- <button class='btn1'  id="3" @tap='tap'>
    <view>签到详情</view>
 </button> -->
        </view>
      </folder1>



      <view class="padding-10"></view>
      <folder2 title="作业" componentId="1" fontClass="font-size:32rpx;font-weight:bold">
        <view slot="content">
          <button class='btn1'  id="4" @tap='tap'>
            
            <view>布置作业</view>

        </button>
                <!-- <button class='btn1'  id="5" @tap='tap'>
            
            <view>修改作业信息</view>
        </button> -->

        <button class='btn1'  id="6" @tap='tap'>
            
            <view>查看作业</view>
        </button>
        </view>


      </folder2>
        <view class="padding-10"></view>
      <folder3 title="课堂测试" componentId="2" fontClass="font-size:32rpx;font-weight:bold">
    <view slot="content">
      <button class='btn1'  id="7" @tap='tap'>
        
        <view>发布课堂测试</view>
    </button>

    <button class='btn1'  id="8" @tap='tap'>
        
        <view>管理课堂测试</view>
    </button>
    
    <button class='btn1'  id="9" @tap='tap'>
        
        <view>查看测试情况</view>
    </button>
        </view>
      </folder3>


      <view class="padding-10"></view>
      <folder4 title="学生信息" componentId="3" fontClass="font-size:32rpx;font-weight:bold">
        <view slot="content">
           <button class='btn1'  id="10" @tap='tap'>
        
        <view>课程学生</view>
      </button>
      <button class='btn1'  id="11" @tap='tap'>
        
        <view>管理课程学生</view>
    </button>
        </view>
      </folder4>
    <button class='weui-btn' type='warn' @tap='del'>删除课程</button>

    </view>
  </view>
</template>
<script>
import wepy from 'wepy'
import Folder from '@/components/folder/index'
// import base from '/components/van/base/index'// 文件路径
// 通过继承自wepy.page的类创建页面逻辑
export default class classControl extends wepy.page {
  config = {
    navigationBarTitleText: '管理课程'
  }
  components = {
    folder1: Folder,
    folder2: Folder,
    folder3: Folder,
    folder4: Folder
  }
  // 可用于页面模板绑定的数据
  data = {
    count: '',
    courseName: '',
    idCourse: ''
  }
  // 事件处理函数(集中保存在methods对象中)
  methods = {
    del(e) {
      let that = this
      let app = this.$parent
      var courseDate = {
        idCourse: that.idCourse
      }
      console.log(that.idCourse)
      app.request('Course.delCourse', courseDate, '请稍等...')
    },
    tap(e) {
      let tid = e.currentTarget.id
      switch (tid) {
        case '1':
          this.$navigate('./signinCreat?idCourse=' + this.idCourse + '&courseName=' + this.courseName)
          break
        case '2':
          this.$navigate('./signinChoose?idCourse=' + this.idCourse + '&courseName=' + this.courseName)
          break
        case '3':
          this.$navigate('./signinControl?idCourse=' + this.idCourse + '&courseName=' + this.courseName)
          break
        case '4':
          this.$navigate('./homeworkChoose?idCourse=' + this.idCourse + '&courseName=' + this.courseName)
          break
        case '5':
          this.$navigate('./homeworkControl?idCourse=' + this.idCourse + '&courseName=' + this.courseName)
          break
        case '6':
          this.$navigate('./homeworkControl?idCourse=' + this.idCourse + '&courseName=' + this.courseName)
          break
        case '7':
          this.$navigate('./testCreat?idCourse=' + this.idCourse + '&courseName=' + this.courseName)
          break
        case '8':
          this.$navigate('./testControl?idCourse=' + this.idCourse + '&courseName=' + this.courseName)
          break
        case '9':
          this.$navigate('./testSearch?idCourse=' + this.idCourse + '&courseName=' + this.courseName)
          break
        case '10':
          this.$navigate('./stuBan?idCourse=' + this.idCourse + '&courseName=' + this.courseName)
          break
        case '11':
          this.$navigate('./signinCreat?idCourse=' + this.idCourse + '&courseName=' + this.courseName)
          break
      }
    }
  }
  // 页面的生命周期函数
  onLoad(e) {
    console.log(e)
    this.courseName = e.courseName
    this.idCourse = e.idCourse
    this.count = e.count
    this.$apply()
  }
}
</script>
