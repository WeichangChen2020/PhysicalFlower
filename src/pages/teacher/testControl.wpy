<style type="less">
.head{
  padding:25rpx;
  text-align:center;
  color:#777;
  font-size:35rpx;
  height: 160rpx;
}
.border{
  display: flex;
  flex-direction: row;
  background-color: #fff;
  border-radius: 20rpx;
  padding: 20rpx;
  margin: 40rpx;
  height: 160rpx;
}
.icon{
  width:120rpx;
  height:120rpx;
  margin:0rpx;
  margin-left:10rpx;
}
.contain{
  padding-left:20rpx;
  line-height:55rpx;
  font-size:36rpx;
  margin-left:20%;
  margin-right:20%;
}
.subtitle{
  color:#aaa;
  font-size:28rpx;
  line-height:32rpx;
  display:block;
  margin-top:8rpx;
}

.title {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}
</style>
<template>
  <view class="kai-content">
    <dialog />
    <!-- <view class='head'>签到列表 </view> -->
    <button wx:for='{{quizList}}' class='border' wx:key='*this' @touchend='touchend' @longpress='showSync' @tap='tap' data-idquiz={{item.idQuiz}} >
      <view class='contain'>
        <view class='title'>{{item.time}}</view>
        <text class='subtitle'>截止时间：{{item.endtime}}</text> 
        <text class='subtitle'>状态：{{item.status}}</text> 
      </view>
    </button>
  </view>
</template>
<script>
import wepy from 'wepy'
import Dialog from '@/components/dialog/index'
import { formatDateTime } from '@/public/js/formatDateTime.js'
// 通过继承自wepy.page的类创建页面逻辑
export default class signinChoose extends wepy.page {
  config = {
    navigationBarTitleText: '测试选择',
    backgroundTextStyle: 'light',
    navigationBarBackgroundColor: '#fff',
    navigationBarTextStyle: 'black'
  }

  components = {
    dialog: Dialog
  }
  // 可用于页面模板绑定的数据
  data = {
    quizList: [],
    idCourse: '',
    courseName: '',
    page: 0
  }

  // 事件处理函数(集中保存在methods对象中)
  methods = {
    touchend(e) {
      if (this.data.check === 1) {
        setTimeout(() => {
          this.check = 0
        }, 100)
      }
    },
    tap(e) {
      let that = this
      if (that.check === 1) {
        return
      }
      console.log(e)
      that.$navigate('./testSearch?idQuiz=' + e.currentTarget.dataset.idquiz + '&idCourse=' + that.idCourse)
    },
    showSync (e) {
      let app = this.$parent
      let that = this
      var postData = {
        idQuiz: e.currentTarget.dataset.idquiz
      }
      const options = {
        title: '提示',
        content: '请选择操作',
        type: 'muti',
        showVertical: false,
        buttons: [{
          text: '取消'
        }, {
          text: '删除',
          color: '#E45143',
          sync: false
        }]
      }
      that.$invoke('dialog', 'show', options).then((value) => {
        console.log(value) // 0: 取消 1：删除测试
        if (value === 1) {
          app.request('Quiz.delQuiz', postData, 'Loading...')
          .then((res) => {
            if (res.data.errCode === 0) {
              let tmp = []
              that.quizList.forEach(element => {
                if (element.idQuiz === postData.idQuiz) {
                  // 只会跳出当前循环，不会中断整个函数
                  return
                }
                tmp.push(element)
              })
              that.quizList = tmp
              that.$apply()
              app.toast('删除成功！')
            }
          })
        }
      }, () => {
        console.log('reject')
      })
    }
  }

  // 页面的生命周期函数
  onLoad(e) {
    console.log(e)
    this.idCourse = e.idCourse
    this.courseName = e.courseName
    this.getQuizList()
  }
  onShow() {
  }

  onPullDownRefresh() {
  }

  onReachBottom() {
    this.getQuizList()
  }

  getQuizList() {
    let app = this.$parent
    let that = this
    that.page = that.page + 1
    let postData = {
      page: that.page,
      idCourse: that.idCourse
    }
    console.log('postData', postData)
    app.request('Quiz.getQuizList', postData, 'Loading...')
    .then((res) => {
      if (res.data.errCode === 0) {
        for (var j = 0; j < res.data.data.length; j++) {
          that.quizList.push(res.data.data[j])
          that.$apply()
        }
        var timestamp = (new Date()).getTime() / 1000
        for (var i = 0; i < res.data.data.length; i++) {
          that.quizList[i].endtime = formatDateTime(that.quizList[i].gmtEnd * 1000).substr(-8)
          that.quizList[i].time = new Date(parseInt(that.quizList[i].gmtCreate) * 1000).toLocaleString().replace(/:\d{1,2}$/, ' ')
          if (that.quizList[i].gmtEnd <= timestamp) {
            that.quizList[i].status = '已结束'
          } else {
            that.quizList[i].status = '进行中'
          }
          that.$apply()
        }
        console.log(that.quizList)
      } else if (res.data.errCode === 102) {
        app.toast('已获取所有测试！')
      }
    })
  }
}
</script>
