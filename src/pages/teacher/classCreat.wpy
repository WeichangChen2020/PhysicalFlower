<style type="less">
.greetingc {
  font-size: 14px;
  color: gray;
  margin: 20rpx 0 10rpx 20rpx;
  display: flex;
  justify-content: center;
}
.greeting {
  font-size: 14px;
  color: gray;
  margin: 20rpx 0 10rpx 20rpx;
}
input {
  width: 300rpx;
  border: 2rpx solid rgba(0, 0, 0, 0.301);
  border-radius: 10rpx;
  margin: 20rpx 0 10rpx 20rpx;
  color: #000;
  font-family: '仿宋';
  font-size: 12px;
}

.container1 {
  background-color: white;
}

.input {
  margin-top: 30rpx;
  border-bottom: #ddd solid 2rpx;
}

.img_hd {
  width: 670rpx;
  display: flex;
  flex-direction: row;
  text-align: center;
}

.border {
  display: flex;
  flex-direction: column;
  align-items: center;
  background-color: white;
  border-width: 4rpx 0 4rpx 0;
  border-style: solid;
  border-color: #eee;
  font-size: 30rpx;
  line-height: 60rpx;
  color: #b95;
  padding: 20rpx 20rpx 40rpx 20rpx;
}
</style>
<template>
<canvas canvas-id="photo_canvas" style="width:{{canvasWidth}}px;height:{{canvasHeight}}px;position: absolute;left:-1000000px;top:-1000000px; "></canvas>
	<view>
		<text class="greetingc">增加课程</text>
    <view>
      <block>
      <text class="greeting">课程名称：</text>
      <input placeholder="请输入课程名称"  maxlength="15" placeholder-class="inputi" @input="input"/>
      </block>
<view class='border'>
  <view class="weui-uploader">
    <view class="img_hd">
      <view class="weui-uploader__title">图片上传</view>
      <view class="weui-uploader__info">{{files.length}}/2</view>
    </view>
    <view class="weui-uploader__bd">
      <view class="weui-uploader__files" id="uploaderFiles">
        <block wx:for="{{files}}" wx:key="*this">
          <view class="weui-uploader__file" bindtap="previewImage" id="{{item}}">
            <image class="weui-uploader__img" src="{{item}}" mode="aspectFill" />
          </view>
        </block>
      </view>

      <view class="weui-uploader__input-box">
        <view class="weui-uploader__input" bindtap="chooseImage"></view>
      </view>
    </view>
  </view>
</view>

      <button class="greeting" @tap="tap">提交</button>
    </view>
	</view>
</template>
<script>
import wepy from 'wepy'

// 通过继承自wepy.page的类创建页面逻辑
export default class classCreat extends wepy.page {
  // 可用于页面模板绑定的数据
  data = {
    course: '',
    files: [],
    imageBase64: '',
    problem_description: '',
    canvasWidth: '',
    canvasHeight: ''
  }

  // 事件处理函数(集中保存在methods对象中)
  methods = {
    input(e) {
      this.course = e.detail
    },
    tap(e) {
      if (this.course !== '') {
        let app = this.$parent
        var courseDATA = {
          questionSet: 1,
          courseName: this.course.value,
          logo: this.imageBase64
        }
        app
          .request('courseCreate', courseDATA, 'loading')
          .then(d => console.log(d))
        wx.navigateBack({
          delta: 1
        })
      } else {
        wx.showModal({
          title: '提示',
          content: '课程名称不能为空',
          showCancel: false
        })
      }
    },
    chooseImage: function() {
      var that = this
      wx.chooseImage({
        sizeType: ['original', 'compressed'], // 可以指定是原图还是压缩图，默认二者都有
        sourceType: ['album', 'camera'], // 可以指定来源是相册还是相机，默认二者都有
        success: function(res) {
          // 返回选定照片的本地文件路径列表，tempFilePath可以作为img标签的src属性显示图片
          that.files = that.data.files.concat(res.tempFilePaths)
          that.$apply()
          // this.$apply()
          wx.getImageInfo({
            src: res.tempFilePaths[0],
            success: function(res) {
              // console.log('getImageInfo', res)
              var ctx = wx.createCanvasContext('photo_canvas')
              var ratio = 2
              that.canvasWidth = res.width
              that.canvasHeight = res.height
              // onsole.log(that.data.canvasWidth, that.data.canvasHeight)
              // 保证宽高均在200以内
              while (
                that.data.canvasWidth > 10000 ||
                that.data.canvasHeight > 10000
              ) {
                // 比例取整
                that.canvasWidth = Math.trunc(res.width / ratio)
                that.canvasHeight = Math.trunc(res.height / ratio)
                ratio++
              }
              console.log(that.data.canvasWidth, that.data.canvasHeight)
              ctx.drawImage(
                res.path,
                0,
                0,
                that.data.canvasWidth,
                that.data.canvasHeight
              )
              ctx.draw()
              setTimeout(function() {
                wx.canvasToTempFilePath({
                  fileType: 'jpg',
                  quality: 0.5,
                  canvasId: 'photo_canvas',
                  success: function(res) {
                    console.log('下载canvas成功')
                    // 转编码base64
                    wx.getFileSystemManager().readFile({
                      filePath: res.tempFilePath, // 选择图片返回的相对路径
                      encoding: 'base64', // 编码格式
                      success: res => {
                        that.imageBase64 = res.data
                        that.$apply()
                        console.log('修改成功等待调用')
                      },
                      fail: function(e) {
                        console.log(e)
                        console.log(that.data)
                      }
                    })
                  },
                  fail: function(error) {
                    console.log('下载canvas失败')
                    console.log(error)
                  }
                })
              }, 100)
              // TODO  path赋值
            },
            fail: function(error) {
              console.log(error)
            }
          })
        },
        error: function(res) {
          console.log(res)
        }
      })
    },
    previewImage: function(e) {
      wx.previewImage({
        current: e.currentTarget.id, // 当前显示图片的http链接
        urls: this.data.files // 需要预览的图片http链接列表
      })
    }
  }

  onLoad() {
  }
}
</script>
