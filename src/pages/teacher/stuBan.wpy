<style type="less">
page {
  width: 100%;
  height: 100%;
}
.list{
  width: 200rpx;
  height: 200rpx;
  border: 1px solid #ccc;
}
.padding{
  margin-top: 10%;
}
.weui-grid {
 padding:10px 10px;
 background: #FFFFFF
}
.button {
  width:85%;
  margin-top:15rpx;
  background:linear-gradient(150deg, #e0eafc, #cfdef3);
  color:whitesmoke;
  border-radius:31rpx;
  display:flex;
  flex-direction:row;
  align-items:center;
  justify-content:center;
  font-size: 30rpx;
  }
</style>
<template>
<view>
 <view>课程学生</view>
     <view class="page__bd">
        <view class="weui-grids">
            <block wx:for="{{courseStu}}" wx:key="*this">
                <navigator url="" class="weui-grid" hover-class="weui-grid_active">
                    <image class="weui-grid__icon" src="{{item.avatarUrl}}" />
                    <view class="weui-grid__label">{{item.name}}</view>
                     <!-- <view class="weui-grid__label">{{item.stunum}}</view> -->
                     <view class="weui-grid__label">{{item.stunum}}</view>
                    <button @tap='ban' class='button' data-idUser="{{item.idUser}}">删除</button>
                </navigator>
            </block>
        </view>
    </view>
  </view>
</template>
<script>
  import wepy from 'wepy'

  // 通过继承自wepy.page的类创建页面逻辑
  export default class stuBan extends wepy.page {
    config = {
      navigationBarTitleText: '已加入学生'
    }

    data = {
      idCourse: 0,
      courseStu: []
    };

    // 事件处理函数(集中保存在methods对象中)
    methods = {
      ban(e) {
        let app = this.$parent
        let that = this
        let idUser = e.currentTarget.dataset.iduser
        let postData = {
          idUser: idUser,
          idCourse: that.idCourse
        }
        app.request('Course.delStuInCourse', postData, 'Loading...')
        .then((res) => {
          console.log(res)
          if (res.data.errCode === 0) {
            setTimeout(() => {
              that.courseStu = []
              that.onLoad({idCourse: that.idCourse}, {courseName: that.courseName})
            }, 800)
            app.toast('删除成功！')
          }
        })
      }
    }

    // 页面的生命周期函数
    onLoad(e) {
      let app = this.$parent
      let that = this
      that.idCourse = e.idCourse
      that.courseName = e.courseName
      var postData = {
        idCourse: that.idCourse
      }
      app.request('Teacher.getStudentListByIdCourse', postData, 'Loading...')
      .then((res) => {
        console.log(res)
        if (res.data.errCode === 0) {
          that.courseStu = res.data.data
          for (var i = 0; i < res.data.data.length; i++) {
            if (res.data.data[i].addStatus === '1') {
              that.courseStu.push(res.data.data[i])
            }
          }
          that.$apply()
        }
      })
    }
    onShow() {
    }
    onPullDownRefresh() {
      let that = this
      that.courseStu = []
      that.onLoad({idCourse: that.idCourse}, {courseName: that.courseName})
    }
  }
</script>
