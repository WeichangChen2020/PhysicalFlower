<style type="less">
</style>
<template>
    <canvas canvas-id="photo_canvas" style="width:{{canvasWidth}}px;height:{{canvasHeight}}px;position: absolute;left:-1000000px;top:-1000000px; "></canvas>

  <view class='greeting'>XXXXXX班级签到</view>
  <view class='border'>
    <view>签到编号</view>
    <text class='input'>XX日XX号签到</text>
  </view>

  <view class='greeting'>获取签到地点</view>
  <view class='border'>
    <view>签到地点记录</view>
    <form bindsubmit="openLocation">
      <view style='display: flex;flex-direction: row'>
        <button class='btn' disabled='{{isChecked<2}}' bindtap='getLocation'>点击获取位置</button>
      </view>

        <view class='border'>
          <view>签到精度选择</view>
          <input class='input' disabled='{{isChecked<1}}' placeholder='输入签到精度' focus='{{focus}}' maxlength="10" bindinput='bindKeyInput' />
      </view>
      <view class="img_hd" wx:if='{{isGotLoc}}'>
        <view class="weui-uploader__title">经度
          <input class="weui-uploader__info" value="{{location.longitude}}°E" name="longitude" />
        </view>
        <view class="weui-uploader__title">纬度
          <input class="weui-uploader__info" value="{{location.latitude}}°N" name="latitude" />
        </view>
      </view>
    </form>

  </view>

  <view class='greeting'>发布签到</view>
  <view class='border'>
    <button class="btn" style='width:400rpx' bindtap='reg'>提交并发布签到</button>
  </view>
</template>
<script>
import wepy from 'wepy'

// 通过继承自wepy.page的类创建页面逻辑
export default class signinCreat extends wepy.page {
  config ={
    window: {
      backgroundTextStyle: 'light',
      navigationBarBackgroundColor: '#fff',
      navigationBarTitleText: '发布签到',
      navigationBarTextStyle: 'black'
    }
  }
  // 可用于页面模板绑定的数据
  data = {
    isGotLoc: 0,
    files: [],
    motto: 'hw',
    userInfo: {},
    // 默认未获取地址
    hasLocation: false,
    inputValue: '',
    commomArray: {
      address_name: 'fk',
      new_longitude: '',
      new_latitude: '',
      img_path: ''
    },
    // new_longitude: '',
    // new_latitude: '',

    address_city: '',
    address_description: '',
    canvasWidth: '',
    canvasHeight: ''
  }

  // 事件处理函数(集中保存在methods对象中)
  methods = {
    // 获取经纬度
    getLocation: function(e) {
      console.log(e)
      var that = this
      wx.getLocation({
        type: 'wgs84',
        success: function(res) {
          console.log(res)
          that.setData({
            isGotLoc: 1,
            hasLocation: true,
            new_longitude: res.longitude,
            new_latitude: res.latitude,
            location: {
              longitude: res.longitude,
              latitude: res.latitude
            }
          })
          wx.showToast({
            title: '获取坐标成功'
          })
          wx.request({
            // 百度地图API，将微信获得的经纬度传给百度，获得城市等信息
            url:
              'https:// api.map.baidu.com/geocoder/v2/?ak=GAKrXdS2lPhNejYKnvfalheyoiTqcnWG&location=' +
              that.data.new_latitude +
              ',' +
              that.data.new_longitude +
              '&output=json&coordtype=wgs84ll',
            data: {},
            header: {
              'Content-Type': 'application/json'
            },
            success: function(res) {
              console.log(res.data.result)
              console.log(
                res.data.result.addressComponent.city +
                  res.data.result.addressComponent.district
              )
              console.log(res.data.result.sematic_description)
              that.setData({
                address_city:
                  res.data.result.addressComponent.city +
                  res.data.result.addressComponent.district,
                address_description: res.data.result.sematic_description
              })
            },
            fail: function() {
              // fail
            }
          })
        }
      })
    },
    // 提交位置信息
    reg: function(e) {
      console.log(this.data.new_longitude, this.data.new_latitude)
      wx.showLoading({
        title: '上传数据中'
      })
      // todo
      // wx.request ({
      //   url: appData.apiUrl,
      //   method: 'POST',
      //   header: {
      //     'content-type': 'application/json'
      //   },
      //   data: {
      //     pf: 'wx',
      //     tag: 'addLocation',
      //     name: this.data.inputValue,
      //     lon: this.data.new_longitude,
      //     lat: this.data.new_latitude
      //   },
      //   success(res) {
      //     wx.navigateBack({
      //       delta: 1
      //     })
      //     wx.showToast({
      //       title: '上传位置成功'
      //     })
      //   }
      // })
    },
    // 根据经纬度在地图上显示

    bindKeyInput: function(e) {
      this.setData({
        inputValue: e.detail.value
      })
      // console.log(inputValue)
    }
  }

  // 页面的生命周期函数
  onLoad() {
    console.log('onLoad')
  }
}
</script>
