<style type="less">
.container{
  align-items: center;
  justify-content: center;  
  display:flex
}
.page__bd {
  text-align: center;
}
.icon{
margin-left: 225rpx;
display:flex;
justify-content:center;
overflow:hidden;
width:250rpx;
}
</style>
<template>
<view class="page__bd">
  <view style="display:flex;justify-content:center;">
    <view style="height:850rpx;width:90%;overflow:hidden;border-radius:20rpx;background-color:white;border: #C0C0C0 solid 5rpx;box-shadow:0px 2px 4px 2px #DDDDDD;display:flex;flex-direction:column;justify-content:center;margin-top:30rpx;">
      <view style="position:fixed;top:25px;left:205rpx;" class="bg">
        <view>课程号：{{idCourse}}</view>
        <view>课程名称：{{courseName}}</view>
        <view>加入人数：{{count}}</view>
      </view>
      <image src='{{avatarUrl}}' class='icon' mode="widthFix" style="margin-top:80rpx;"/>
      <view style="margin-top:60rpx;">姓名：{{name}}</view>
      <view style="margin-top:60rpx;">学号：{{stuNum}}</view>
    </view>
  </view>
  <button @tap="random" class="button">
    <view class = "container">
     <loading wx:if="{{show}}" type="circle" size="big"/>
     <text>点名</text>
    </view>
  </button>
</view>
</template>
<script>
import wepy from 'wepy'
import Loading from '@/components/loading/index'
// 通过继承自wepy.page的类创建页面逻辑
export default class signinCreat extends wepy.page {
  components = {
    loading: Loading
  }
  config ={
    navigationBarTitleText: '随机点名'
  }
  // 可用于页面模板绑定的数据
  data = {
    idCourse: 0,
    classStuInfo: [],
    count: 0,
    show: false,
    name: '???',
    stuNum: '???',
    courseName: '',
    avatarUrl: ''
  }

  // 事件处理函数(集中保存在methods对象中)
  methods = {
    random(e) {
      let that = this
      setTimeout(() => {
        var num = Math.floor(Math.random() * that.count)
        that.name = that.classStuInfo[num].name
        that.stuNum = that.classStuInfo[num].stuNum
        that.avatarUrl = that.classStuInfo[num].avatarUrl
        that.show = false
        that.$apply()
      }, 1000)
      that.show2 = true
      that.show = true
      that.$apply()
    }
  }

  // 页面的生命周期函数
  onLoad(e) {
    let app = this.$parent
    let that = this
    that.idCourse = e.idCourse
    that.courseName = e.courseName
    var postData = {
      idCourse: that.idCourse
    }
    app.request('Teacher.getStudentListByIdCourse', postData, 'loading')
      .then(function(res) {
        if (res.data.errCode === 0) {
          for (var i = 0; i < res.data.data.length; i++) {
            if (res.data.data[i].addStatus === '1') {
              that.classStuInfo.push(res.data.data[i])
            }
          }
          that.count = that.classStuInfo.length
          that.$apply()
        } else if (res.data.errCode === 101) {
          app.modal('还没有学生加入', '注意')
        } else {
          app.modal('请稍后重试', '注意')
        }
      })
  }
}
</script>
