<style>
.greetingc {
  font-size: 14px;
  color: blueviolet;
  margin: 20rpx 0 10rpx 20rpx;
  display: flex;
  justify-content: center;
}
.contain{
background-color:white;
border-bottom-left-radius:50rpx;
border-bottom-right-radius:50rpx;
border-top-left-radius: 50rpx;
border-top-right-radius: 50rpx;
box-shadow:10rpx 10rpx 5px #f2f2f2;
margin-top:80rpx;
height:800rpx;
}
.icont{
  position: relative;
  margin-left: 10rpx;
  border-radius: 50%;
}
view{
  margin:40rpx;
}
checkbox-group {
display:flex;
flex-direction:column;
}
</style>
<template>
	<view>
		<text class="greetingc">章节列表</text>
	</view>
  <view class="contain">
  <form @submit= "form1">
  <radio-group name="chapter">
  <block wx:for="{{chapterInfo}}" wx:item= "item" wx:key="*this">
    <view>
      <radio class="icont" value="{{item.idQuestionChapter}}"></radio>
      {{item.nameChapter}}
    </view>
  </block>
  <button class='button'  form-type='submit'>选定章节</button>
  </radio-group>
  </form>
  </view>
</template>
<script>
  import wepy from 'wepy'

  // 通过继承自wepy.page的类创建页面逻辑
  export default class homeworkChoose extends wepy.page {
    config = {
      navigationBarTitleText: '课后作业'
    }
    // 可用于页面模板绑定的数据
    data = {
      array: ['大物上', '大物下'],
      index: 0,
      chapterInfo: [],
      idCourse: 0,
      courseName: '',
      idQuestionSet: 1
    };

    // 事件处理函数(集中保存在methods对象中)
    methods = {
      bindPickerChange(e) {
        this.index = e.detail.value
        this.onLoad({'idCourse': this.idCourse, 'courseName': this.courseName, idQuestionSet: (parseInt(this.index) + 1)})
        // console.log('1')
      },
      tap(e) {
      },
      form1(e) {
        if (e.detail.value.chapter === '') {
          wx.showModal({
            title: '注意',
            content: '请选择章节'
          })
        } else {
          wx.navigateTo({
            url: './homeworkCreat?chapter=' + e.detail.value.chapter + '&idCourse=' + this.idCourse
          })
        }
      },
      close (i) {
        this.popData[i].showPopup = false
        console.log(this.popData[i].showPopup)
      }
    };

    // 页面的生命周期函数
    onLoad(e) {
      var that = this
      this.idCourse = e.idCourse
      this.courseName = e.courseName
      let app = that.$parent
      var postData = {
        idCourse: that.idCourse
      }
      app
        .request('Question.getChapterList', postData, 'loading')
        .then(function(e) {
          console.log(e)
          if (e.data.errCode === 0) {
            that.chapterInfo = e.data.data
            that.$apply()
          } else if (e.data.errCode === 102) {
            wx.showToast({
              title: '未找到数据',
              icon: 'none'
            })
          } else {
            wx.showToast({
              title: '网络开小差啦',
              icon: 'none'
            })
          }
        })
        .catch(function(e) {
          app.modal(
            e.message,
            '错误!错误提示是：',
            '确定'
          )
        })
      this.$apply()
    };
  }
</script>
