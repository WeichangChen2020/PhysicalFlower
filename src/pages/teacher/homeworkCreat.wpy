<style>
.greetingc {
  font-size: 14px;
  color: gray;
  margin: 20rpx 0 10rpx 20rpx;
  display: flex;
  justify-content: center;
}
.icont{
  position: relative;
  margin-left: 10rpx;
  border-radius: 50%;
}
.greetingbtn {
  font-size: 14px;
  color: gray;
  margin: 20rpx 0 10rpx 20rpx;
  background-color: gold;
}
.subBtn {
  border-radius: 60rpx;
  font-size: 33rpx;
  width: 490rpx;
  height: 80rpx;
}
.subBtn:hover{
  border-radius: 60rpx;
  font-size: 33rpx;
  width: 490rpx;
  height: 80rpx;
  background-color: rgb(243, 240, 240)
}
.fake{
  width: 100%;
  display: flex;
  padding: 10px 8px 15px;
  box-sizing: border-box;
  line-height: 24px;
  position: relative;
  background-color: #fff;
  color: #333;
  font-size: 14px;
  overflow: visible;

}
.fake_title{
  flex: 1;
  max-width: 90px;
  min-width: 90px;
  display: flex
}
.fake_input{
  color: #999;
  overflow: hidden;
  text-align: right;
  vertical-align: middle;
}
.fake_picker{
  width: 100%;
  height: 24px;
  text-align: left;
  min-height: 24px;
  color: #333;
  line-height: inherit;
  display: flex;
  padding-left: 8px;
}

.fake_botton{
  color: #fff;
  background-color: #07c160;
  border: 1px solid #07c160;
  position: relative;
  display: inline-block;
  box-sizing: border-box;
  text-align: center;
  vertical-align: middle;
  height: 30px;
  padding: 0 8px;
  font-size: 12px;
  line-height: 28px;
}
</style>
<template>
	<view>
		<text class="greetingc">试题列表</text>
	</view>
  <form @submit= "form1">
  <checkbox-group name="questionId" >
    <!-- TODO 这里应该做个懒加载 -->
  <view class='fake' style="border-top:1px solid #ccc;border-bottom:1px solid #ccc">
      <picker
        mode="date"
        value="{{a}}"
        start="1900-09-01"
        end="{{now_date}}"
        bindchange="bindDateChange"
      >
      <view style='display:flex'>
        <view class="fake_title">
          <view style='color:red;margin-right:3px;left:0px'></view>截止时间:</view><view class='fake_picker' style="color:{{a === '请选择截止日期'?'gray':'#333'}};font-size:12px">{{a}}</view>
          </view>
      </picker>

       <picker
        mode="time"
        value="{{time}}"
        start="06:00"
        end="24:00"
        bindchange="bindTimeChange"
      >
        <view class="picker" style="color:{{time === '请选择截止时间'?'gray':'#333'}};margin-left:5px;font-size:12px">
          {{time}}
        </view>
      </picker>
    </view>

    <button class='subBtn' style='border-color:#355bc7;color:#a158cb;margin-bottom:30px;margin-top:10px' plain form-type='submit'>提交</button>
    <block wx:for="{{questionInfo}}" wx:for-item="page" wx:key="*this">
      <view style="display:flex;margin-left:8px;margin-right:8px;border-bottom:1px solid #ccc;margin-bottom:15px;margin-top:15px;">
      <checkbox class="icont" value="{{page.idQues}}"></checkbox>
      <image src="{{page.img}}" style="height:{{page.height}}px;width:{{page.width}}px"/>
      </view>
    </block>
  </checkbox-group>
  </form>
</template>
<script>
  import wepy from 'wepy'

  // 通过继承自wepy.page的类创建页面逻辑
  export default class homeworkCreat extends wepy.page {
    // 可用于页面模板绑定的数据
    data = {
      questionInfo: {},
      idQuestionChapter: 0,
      chooseLength: 0,
      gmtEnd: 0,
      idQues: {},
      idCourse: 0,
      now_date: '2100-02-25',
      a: '请选择截止日期',
      time: '请选择截止时间',
      page: 0,
      haveMore: true
    };

    // 事件处理函数(集中保存在methods对象中)
    methods = {
      form1(e) {
        let app = this.$parent
        let that = this
        this.idQues = e.detail.value.questionId
        if (this.idQues.length === 0) {
          app.toast('至少选择1题')
          return
        }
        var vag = this.a + '-' + this.time
        var gmtTime = new Date(vag.replace(/-/g, '/')).getTime()
        var delData = {
          gmtEnd: gmtTime / 1000,
          length: this.chooseLength,
          idQuesList: this.idQues,
          idCourse: parseInt(that.idCourse)
        }
        if (isNaN(delData.gmtEnd)) {
          app.toast('检查截止时间')
          return
        }
        app
          .request('Homework.createHomework', delData, 'loading')
          .then(function(e) {
            if (e.data.errCode === 0) {
              wx.showToast({
                title: '发布成功',
                icon: 'none'
              })
              wx.navigateBack({})
            } else {
              throw (new Error(e.data.msg))
            }
          })
          .catch(function(e) {
            app.modal(
            e.message,
            '错误!错误提示是：',
            '确定'
          )
          })
      },
      bindDateChange(e) {
        this.a = e.detail.value
      },
      bindTimeChange(e) {
        this.time = e.detail.value
      }
    };

    // 页面的生命周期函数
    onLoad(e) {
      this.idCourse = e.idCourse
      this.idQuestionChapter = e.chapter
      this.getQuestionList(this.page, this.idQuestionChapter)
    };
    onReachBottom() {
      if (this.haveMore) {
        this.getQuestionList(this.page, this.idQuestionChapter)
      }
    };
    getQuestionList(page, idQuestionChapter) {
      this.page = this.page + 1
      let app = this.$parent
      let that = this
      let tmp = {}
      let delData = {
        idQuestionChapter: 8,
        page: that.page
      }
      app.request('Question.getQuestionListByIdChapter', delData, 'loading')
      .then((res) => {
        if (res.data.errCode === 0) {
          tmp = res.data.data
          if (res.data.data.length !== 15) {
            that.haveMore = false
          }
        } else if (res.data.errCode === 102) {
          that.haveMore = false
        } else {
          wx.showModal({
            title: '注意',
            content: '网络开小差了'
          })
        }
        for (let i = 0; i < tmp.length; i++) {
          wx.getImageInfo({
            src: tmp[i].img,
            success(e) {
              tmp[i].height = e.height
              tmp[i].width = e.width
            }
          })
        }
        app.toast('加载中', 'loading', true)
      })
      .then(() => {
        that.$apply()
      })
      .then(() => {
        if (that.questionInfo.length === undefined) {
          that.questionInfo = tmp
        } else {
          that.questionInfo = Array.prototype.concat.apply(that.questionInfo, tmp)
        }
      })
      .catch(function(e) {
        app.modal(
          e.message,
          '错误!错误提示是：',
          '确定'
        )
      })
      this.$apply()
    }
  }
</script>
