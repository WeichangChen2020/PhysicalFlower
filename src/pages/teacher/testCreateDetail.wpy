<style>
.greetingc {
  font-size: 14px;
  color: #000000;
  margin: 20rpx 0 10rpx;
  display: flex;
  justify-content: center;
}
.icont{
  position: relative;
  margin-left: 10rpx;
  border-radius: 50%;
}
.subBtn {
  border-radius: 60rpx;
  font-size: 33rpx;
  width: 490rpx;
  height: 80rpx;
}
.subBtn:hover{
  border-radius: 60rpx;
  font-size: 33rpx;
  width: 490rpx;
  height: 80rpx;
  background-color: rgb(243, 240, 240)
}
</style>

<template>
<view>
<toast/>
	<view>
		<text class="greetingc">测试截止时间</text>
	</view>
  <picker mode="time" value="{{time}}" start="00:00" end="23:59" bindchange="bindTimeChange">
    <button type="default" class='subBtn' style='border-color:#355bc7;color:#a158cb;margin-bottom:30px;margin-top:10px'>{{time}}</button>
  </picker>
 <form @submit= "form">
   <checkbox-group name="questionId" >
      <block wx:for="{{questionInfo}}" wx:for-item="item" wx:key="*this">
      <view style="display:flex;margin-left:8px;margin-right:8px;border-bottom:1px solid #ccc;margin-bottom:15px;margin-top:15px;">
        <checkbox class="icont" value="{{item.idQues}}"></checkbox>
        <image src="{{item.img}}" mode="widthFix" style="width:90%"/>
      </view>
    </block>
   </checkbox-group>
  <button form-type='submit' class="button" style="margin-top:30rpx">发布测试</button>
 </form>
</view>
</template>


<script>
  import wepy from 'wepy'
  import Toast from '@/components/toast/index'
  // 通过继承自wepy.page的类创建页面逻辑
  export default class testCreat extends wepy.page {
    config = {
      navigationBarTitleText: '随堂测试'
    }
    // 可用于页面模板绑定的数据
    data = {
      gmtEnd: 0,
      page: 0,
      form: '',
      idQuestionChapter: '',
      questionInfo: [],
      idQuesList: [],
      time: '请选择时间',
      idCourse: 0
    };
    components = {
      'toast': Toast
    }
    // 事件处理函数(集中保存在methods对象中)
    methods = {
      bindTimeChange(e) {
        let app = this.$parent
        let that = this
        var time = e.detail.value
        that.time = time
        that.$apply()
        var now = new Date()
        var yy = now.getFullYear()
        var mm = now.getMonth() + 1
        var dd = now.getDate()
        var date = yy + '-' + mm + '-' + dd + ' ' + time + ':' + '00'
        date = date.substring(0, 19)
        date = date.replace(/-/g, '/')
        var timestamp = new Date(date).getTime()
        that.gmtEnd = timestamp / 1000
        var timeStamp = (new Date()).getTime() / 1000
        if (that.gmtEnd < timeStamp) {
          app.toast('请设定正确的时间！')
        }
      },
      form(e) {
        let app = this.$parent
        let that = this
        var timeStamp = (new Date()).getTime() / 1000
        that.idQuesList = e.detail.value.questionId
        if (that.gmtEnd < timeStamp) {
          app.toast('请注意设置正确时间！')
        } else if (that.idQuesList.length === 0) {
          app.toast('请选择至少一道题!')
        } else {
          var postData = {
            gmtEnd: that.gmtEnd,
            idQuesList: that.idQuesList,
            idCourse: that.idCourse
          }
          app.request('Quiz.createQuiz', postData, 'Loading...')
          .then((res) => {
            console.log(res)
            if (res.data.errCode === 0) {
              const options = {
                content: res.data.errCode === 0 ? '创建成功' : '请稍后重试',
                position: 'middle',
                duration: 2000,
                type: res.data.errCode === 0 ? 'success' : 'warning'
              }
              that.$invoke('toast', 'show', options)
            }
          })
          .then(() => {
            wx.navigateBack({
              delta: 2
            })
          })
          .catch(function(e) {
            app.modal(
              e.message,
              '错误!错误提示是：',
              '确定'
          )
          })
        }
      }
    };

    // 页面的生命周期函数
    onLoad(e) {
      console.log(e)
      this.idQuestionChapter = e.form
      this.idCourse = e.idCourse
      this.courseName = e.courseName
      this.count = e.count
      this.getQuestionList()
    };

    getQuestionList() {
      let app = this.$parent
      let that = this
      that.page = that.page + 1
      let postData = {
        idQuestionChapter: that.idQuestionChapter,
        page: that.page
      }
      app.request('Question.getQuestionListByIdChapter', postData, 'loading...')
      .then((res) => {
        if (res.data.errCode === 0) {
          for (var i = 0; i < res.data.data.length; i++) {
            that.questionInfo.push(res.data.data[i])
            that.$apply()
          }
          console.log(that.questionInfo)
        } else if (res.data.errCode === 102) {
          app.toast('已获取所有题目！')
        }
      })
    };

    onReachBottom() {
      this.getQuestionList()
    }
  }
</script>
