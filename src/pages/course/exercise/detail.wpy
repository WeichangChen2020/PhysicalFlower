<style type="less">
.contain {
  display: flex;
  justify-content: center;
}
.border {
  flex-grow: 1;
}
.border {
  display: block;
}
</style>


<template>
 <view style="margin-bottom:30px;text-align:center;">随堂测试</view>
  <swiper current = "{{current}}" @change = "change"  style="height:900rpx">
    <swiper-item wx:for="{{questionList}}" wx:for-item="page" wx:key="*this" catchtouchmove="stopTouchMove"> 
    <view class="contain">
      <image src="{{page.img}}" class="img"/>
     </view>
     <view wx:for="{{girds}}" wx:for-item="item" wx:key="*this" class="border">
     <button style="background-color:{{bottonClr[item.color]}}" data-submit="{{item.id}}" class=".btn{{item.id}}" @tap="tap" data-idques="{{page.idQues}}" data-answer="{{page.answer}}">{{item.name}}</button>
     </view>
    </swiper-item>
  </swiper>
  <button @tap="previous">上一题</button>
  <button @tap="next">下一题</button>
</template>


<script>
import wepy from 'wepy'
import Icon from '@/components/icon/index'
// 通过继承自wepy.page的类创建页面逻辑
export default class my extends wepy.page {
  config = {
    navigationBarTitleText: '我的'
  }

  components = {
    icon: Icon
  }
  // 可用于页面模板绑定的数据
  data = {
    chapter: 0,
    questionList: [],
    girds: [
      {id: '16', name: 'A', color: 0},
      {id: '32', name: 'B', color: 1},
      {id: '64', name: 'C', color: 2},
      {id: '128', name: 'D', color: 3}
    ],
    exerciseList: [],
    bottonClr: [
      'white',
      'white',
      'white',
      'white'
    ],
    sub: 0,
    current: 0
  }
  // 事件处理函数(集中保存在methods对象中)
  methods = {
    previous() {
      let that = this
      if (that.current === 0) {
        that.current = that.questionList.length - 1
      } else {
        that.current = that.current - 1
      }
    },
    next() {
      let that = this
      if (that.current === that.questionList.length - 1) {
        that.current = 0
      } else {
        that.current = that.current + 1
      }
    },
    stopTouchMove() {
      return false
    },
    change(e) {
      let that = this
      that.sub = 0
      for (var j = 0; j < that.bottonClr.length; j++) {
        that.bottonClr[j] = 'white'
      }
      that.current = e.detail.current
      console.log(that.current)
    },
    tap(e) {
      let tmp = {}
      let that = this
      if (that.sub === 0) {
        for (var j = 0; j < that.bottonClr.length; j++) {
          that.bottonClr[j] = 'white'
        }
        tmp.idQues = e.currentTarget.dataset.idques
        tmp.submit = e.currentTarget.dataset.submit
        tmp.answer = e.currentTarget.dataset.answer
        if (tmp.submit === tmp.answer) {
          tmp.result = 1
        } else {
          tmp.result = 0
        }
        if (tmp.result === 1) {
          for (var i = 0; i < that.girds.length; i++) {
            if (that.girds[i].id === tmp.answer) {
              that.bottonClr[that.girds[i].color] = 'green'
            }
          }
        } else if (tmp.result === 0) {
          for (i = 0; i < that.girds.length; i++) {
            if (that.girds[i].id === tmp.submit) {
              that.bottonClr[that.girds[i].color] = 'red'
            } else if (that.girds[i].id === tmp.answer) {
              that.bottonClr[that.girds[i].color] = 'green'
            }
          }
        }
        that.$apply()
        that.exerciseList.push(tmp)
        that.sub = that.sub + 1
      } else {
        return false
      }
      console.log(that.exerciseList)
    }
  }

  onLoad(e) {
    let that = this
    that.chapter = e.id
    that.getQuestionList()
  }

  getQuestionList() {
    let app = this.$parent
    let that = this
    let postData = {
      idChapter: that.chapter,
      page: 1
    }
    app.request('Question.getAllSingleFromIdchapter', postData, 'Loading...')
    .then((res) => {
      if (res.data.errCode === 0) {
        that.questionList = res.data.data.data
        console.log(that.questionList)
        that.$apply()
      } else {
        app.toast('请稍后重试！')
      }
    })
  }
}
</script>
