<style type="less">
</style>
<template>
  <tab @bindChange.user="change"/>
  <!-- 只显示10条数据,下拉加载更多 -->
  <block wx:if="{{tab.selectedId === 2 ? false : true}}">
    <block wx:for="{{homeworkInfo}}" wx:for-item="item" wx:key="id">
    <view id="{{index}}"  class="weui-cell weui-cell_access" @tap='tap' id='{{index}}'>
      <view class="weui-cell__bd" style="display:flex;justify-content:space-between;font-size:28rpx;"><view>{{item.name}}</view><view style="font-size:11px;color:{{item.homeState =='进行中' ?'green':'#ccc'}}">{{item.homeState}}</view></view>
      <view class="weui-cell__ft weui-cell__ft_in-access"></view>
    </view>
    </block>
  </block>

    <block wx:if="{{tab.selectedId === 1 ? false : true}}">
      <block  wx:for="{{homeworkInfo}}" wx:for-item="item2" wx:key="id">
    <view id="{{index}}"  class="weui-cell weui-cell_access" @tap='tapAccess' id='{{index}}' wx:if="{{item2.homeState == '已结束' ?true:false}}">
      <view class="weui-cell__bd" style="display:flex;justify-content:space-between;font-size:28rpx;"><view>{{item2.name}}</view><view style="font-size:11px;color:{{item2.assessState =='互评中' ?'red':'#ccc'}}">{{item2.assessState}}</view></view>
      <view class="weui-cell__ft weui-cell__ft_in-access"></view>
    </view>
      </block>
    </block>
</template>
<script>
  import wepy from 'wepy'
  import Tab from '@/components/tab/index'

  // 通过继承自wepy.page的类创建页面逻辑
  export default class List extends wepy.page {
    // 可用于页面模板绑定的数据
    data = {
      homeworkInfo: [
      ],
      assessInfo: [
      ],
      idCourse: '',
      tab: {
        list: [{id: 1, title: '提交作业'}, {id: 2, title: '互评'}],
        selectedId: 1,
        class: 'tab-success'
      },
      page: 1
    };
    components = {
      tab: Tab
    };

    // 事件处理函数(集中保存在methods对象中)
    methods = {
      tap (e) {
        let tid = e.currentTarget.id
        wx.navigateTo({
          url: './detail?idCourse=' + this.homeworkInfo[tid].url
        })
      },
      change (res) {
        // TODO 互评tab
        this.tab.selectedId = res
        this.$apply()
      },
      tapAccess (e) {
        let tid = e.currentTarget.id
        wx.navigateTo({
          url: './homeworkRecord?idCourse=' + this.homeworkInfo[tid].assessUrl
        })
      }
    };

    // 页面的生命周期函数
    onLoad(e) {
      // console.log(e)
      this.$invoke('tab', 'doInitTabData', this.tab)
      var that = this
      // console.log(e)
      this.idCourse = e.idCourse
      let app = that.$parent
      var delData = {
        idCourse: this.idCourse,
        page: this.page
      }
      app
        .request('Homework.getHomeworkList', delData, 'loading')
        .then(function(e) {
          if (e.data.errCode === 0) {
            var len = e.data.data
            var timestamp = (new Date()).getTime()
            console.log(e)
            for (let i = 0; i < len.length; i++) {
              that.homeworkInfo[i] = e.data.data[i]
              // that.assessInfo[i] = e.data.data[i]
              var endTime = new Date(parseInt(e.data.data[i].gmtEnd) * 1000).toLocaleString().replace(/:\d{1,2}$/, ' ')
              if (parseInt(e.data.data[i].gmtEnd) > (timestamp / 1000)) {
                that.homeworkInfo[i].homeState = '进行中'
              } else {
                that.homeworkInfo[i].homeState = '已结束'
              }
              // console.log('assessmentEnd', parseInt(e.data.data[i].assessmentEnd) > (timestamp / 1000), that.homeworkInfo[i].homeState === '已结束')
              if (parseInt(e.data.data[i].assessmentEnd) > (timestamp / 1000) && that.homeworkInfo[i].homeState === '已结束') {
                that.homeworkInfo[i].assessState = '互评中'
              } else {
                that.homeworkInfo[i].assessState = '已结束'
              }
              // console.log(e.data.data[i])
              that.homeworkInfo[i].url = that.idCourse + '&idHomework=' + e.data.data[i].idHomework + '&state=' + that.homeworkInfo[i].homeState + '&name=' + endTime
              that.homeworkInfo[i].assessUrl = that.idCourse + '&idHomework=' + e.data.data[i].idHomework + '&state=' + that.homeworkInfo[i].assessState + '&name=' + endTime
              that.homeworkInfo[i].name = endTime
              // that.assessInfo[i].name = endTime
            }
            that.$apply()
          } else {
            wx.showToast({
              title: '网络开小差了',
              icon: 'none'
            })
          }
        })
        .catch(function(e) {
          app.modal(
            e.message,
            '错误!错误提示是：',
            '确定'
          )
        })
    };
    onShow() {
      // let app = this.$parent
      // var UL_DATA = {
      //   idCourse: app.globalData.activeCourse
      // }
      // app.request('Homework.getHomeworkList', UL_DATA, '查询中...')
      // .then((res, reject) => {
      //   console.log(res)
      // })
      // .catch(function(error) {
      //   console.error(error)
      //   app.modal(
      //     error.message,
      //     '错误!',
      //     '确定'
      //   )
      // })
    }
    onReachBottom(e) {
      this.page = parseInt(this.page) + 1
      // todo连接数组进行显示
    }
  }
</script>
