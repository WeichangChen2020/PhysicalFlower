<style type="less">
.swiper image {
  width: 100%;
  height: 80%;
}
</style>
<template>
  <view style="margin-bottom:30px;text-align:center;">随堂测试</view>
  <swiper  class='swiper image' style="height:900rpx" current = "{{current}}" @change = "change">
    <swiper-item wx:for="{{quizQues}}" wx:for-item="page" wx:key="*this"> 
      <form @submit= "form">
      <image src="{{page.img}}"/>
      <view style="display:flex"> 
        <radio-group name="answer">
        <block wx:for="{{girds}}" wx:item= "item" wx:key="*this">
          <radio class="icont" value="{{item.id}}"></radio>
          {{item.name}}
        </block>
      </radio-group>
      </view>
      <button formType="submit">下一题</button>
    </form>
    </swiper-item>
  </swiper>
    <button wx:if ="{{show}}">提交本次测试</button>
</template>
<script>
  import wepy from 'wepy'

  // 通过继承自wepy.page的类创建页面逻辑
  export default class testSearch extends wepy.page {
    config = {
      navigationBarTitleText: '随堂测试'
    }
    // 可用于页面模板绑定的数据
    data = {
      quizQues: [],
      // 是否采用衔接滑动
      circular: false,
      // 是否显示画板指示点
      indicatorDots: false,
      // 选中点的颜色
      indicatorcolor: '#000',
      // 是否竖直
      vertical: false,
      // 是否自动切换
      autoplay: true,
      // 自动切换的间隔
      interval: 2500,
      // 滑动动画时长毫秒
      duration: 100,
      // 图片宽度
      imgwidth: 750,
      // 默认
      current: 0,
      answerInfo: [],
      show: false,
      girds: [
        {id: '16', name: 'A'},
        {id: '32', name: 'B'},
        {id: '64', name: 'C'},
        {id: '128', name: 'D'}
      ]
    };

    // 事件处理函数(集中保存在methods对象中)
    methods = {
      form(e) {
        let that = this
        var info = {}
        info.submit = e.detail.value.answer
        if (info.submit === that.quizQues[that.current].answer) {
          info.check = 1 // check为1回答正确，0回答错误
        } else if (info.submit === '') {
          info.check = -1
        } else {
          info.check = 0
        }
        info.idQuizItems = that.quizQues[that.current].idQuizItems
        that.answerInfo[that.current] = info
        console.log(that.answerInfo)
        if (that.current < that.quizQues.length - 1) {
          that.current = that.current + 1
        }
      },
      change(e) {
        let that = this
        that.current = e.detail.current
        if (that.current === that.quizQues.length - 1) {
          that.show = true
        } else {
          that.show = false
        }
        console.log(that.current)
      },
      tap(e) {
        let app = this.$parent
        let that = this
        if (that.quizQues[that.current].do === 0) {
          that.quizQues[that.current].d0 = 1
          console.log(that.quizQues[that.current].do)
          var answer = {}
          answer.idQuizItems = e.currentTarget.dataset.idquizitems
          answer.answer = e.currentTarget.dataset.answer
          if (answer.answer === that.quizQues[that.current].answer) {
            answer.result = 1 // 1表示回答正确
            if (that.current === that.quizQues.length - 1) {
              app.toast('已完成随堂练习')
            }
            if (that.current < that.quizQues.length - 1) {
              that.current = that.current + 1
            }
          } else {
            answer.result = 0 // 0表示回答错误
            if (that.current === that.quizQues.length - 1) {
              app.toast('已完成随堂练习')
            }
            if (that.current < that.quizQues.length - 1) {
              that.current = that.current + 1
            }
          }
          that.answerInfo.push(answer)
          console.log(that.answerInfo)
        } else {
          that.checkAnswer(e.currentTarget.dataset.idquizitems, e.currentTarget.dataset.answer)
        }
      }
    };
    submit(e) {
      console.log('test')
    }
    // 页面的生命周期函数
    onLoad(e) {
      console.log(e)
      this.idQuiz = e.idQuiz
      console.log(this.idQuiz)
      this.getQuizQues()
    };

    getQuizQues() {
      let app = this.$parent
      let that = this
      var postData = {
        idQuiz: that.idQuiz,
        page: 1
      }
      app.request('Quiz.getQuizQues', postData, 'Loading...')
      .then((res) => {
        that.quizQues = res.data.data
        that.$apply()
        for (var i = 0; i < that.quizQues.length; i++) {
          that.quizQues[i].do = 0
        }
        console.log(that.quizQues)
      })
    }

    checkAnswer(idQuizItems, answer) {
      let that = this
      for (var i = 0; i < that.answerInfo.length; i++) {
        if (that.answerInfo[i].idQuizItems === idQuizItems) {
          that.answerInfo[i].answer = answer
          for (var j = 0; j < that.quizQues.length; j++) {
            if (that.quizQues[j].idQuizItems === idQuizItems) {
              if (that.quizQues[j].answer === answer) {
                that.answerInfo[i].check = 1
              }
            }
          }
        }
      }
    }
  }
</script>
