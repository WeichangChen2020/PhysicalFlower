<style type="less">
.swiper image {
  width: 100%;
  height: 50%;
}
.choose {
  border-width: 5rpx
}
</style>
<template>
  <view style="margin-bottom:30px;text-align:center;">随堂测试</view>
  <swiper  class='swiper image' style="height:1500rpx" current = "{{current}}">
    <swiper-item wx:for="{{quizQues}}" wx:for-item="page" wx:key="*this"> 
      <image src="{{page.img}}"/>
      <view style="display:flex"> 
       <button data-idQuizItems ="{{page.idQuizItems}}" data-answer = '16' @tap='tap' disabled="{{disabled}}">A</button>
       <button data-idQuizItems ="{{page.idQuizItems}}" data-answer='32' @tap='tap' disabled="{{disabled}}">B</button>
       <button data-idQuizItems ="{{page.idQuizItems}}" data-answer='64' @tap='tap' disabled="{{disabled}}">C</button>
       <button data-idQuizItems ="{{page.idQuizItems}}" data-answer='128' @tap='tap' disabled="{{disabled}}">D</button>
      </view>
      <button>提交本次测试</button>
    </swiper-item>
  </swiper>
</template>
<script>
  import wepy from 'wepy'

  // 通过继承自wepy.page的类创建页面逻辑
  export default class testSearch extends wepy.page {
    config = {
      navigationBarTitleText: '随堂测试'
    }
    // 可用于页面模板绑定的数据
    data = {
      quizQues: [],
      // 是否采用衔接滑动
      circular: false,
      // 是否显示画板指示点
      indicatorDots: false,
      // 选中点的颜色
      indicatorcolor: '#000',
      // 是否竖直
      vertical: false,
      // 是否自动切换
      autoplay: true,
      // 自动切换的间隔
      interval: 2500,
      // 滑动动画时长毫秒
      duration: 100,
      // 图片宽度
      imgwidth: 750,
      // 默认
      current: 0,
      answerInfo: [],
      disabled: false
    };

    // 事件处理函数(集中保存在methods对象中)
    methods = {
      tap(e) {
        let app = this.$parent
        let that = this
        var answer = {}
        answer.idQuizItems = e.currentTarget.dataset.idquizitems
        answer.answer = e.currentTarget.dataset.answer
        if (that.current < that.quizQues.length) {
          if (answer.answer === that.quizQues[that.current].answer) {
            answer.check = 1 // 1表示回答正确
            that.disabled = true
            if (that.current === that.quizQues.length - 1) {
              app.toast('已完成随堂练习')
            }
            if (that.current < that.quizQues.length - 1) {
              that.current = that.current + 1
              that.disabled = false
            }
            console.log(that.current)
          } else {
            answer.check = 0 // 0表示回答错误
            that.disabled = true
            if (that.current === that.quizQues.length - 1) {
              app.toast('已完成随堂练习')
            }
            if (that.current < that.quizQues.length - 1) {
              that.current = that.current + 1
              that.disabled = false
            }
            console.log(that.current)
          }
        }
        that.answerInfo.push(answer)
        console.log(that.answerInfo)
      }
    };
    submit(e) {
      console.log('test')
    }
    // 页面的生命周期函数
    onLoad(e) {
      console.log(e)
      this.idQuiz = e.idQuiz
      console.log(this.idQuiz)
      this.getQuizQues()
    };

    getQuizQues() {
      let app = this.$parent
      let that = this
      var postData = {
        idQuiz: that.idQuiz,
        page: 1
      }
      app.request('Quiz.getQuizQues', postData, 'Loading...')
      .then((res) => {
        that.quizQues = res.data.data
        that.$apply()
        console.log(that.quizQues)
      })
    }
  }
</script>
